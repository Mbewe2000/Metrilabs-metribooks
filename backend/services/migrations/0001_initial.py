# Generated by Django 5.2.4 on 2025-07-23 12:56

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'db_table': 'service_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the service (e.g., Cleaning, Delivery, Haircut, Nails)', max_length=200)),
                ('pricing_type', models.CharField(choices=[('hourly', 'Hourly Rate'), ('fixed', 'Fixed Price')], default='hourly', help_text='Whether this service is charged hourly or at a fixed price', max_length=10)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Rate per hour in ZMW (for hourly services)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('fixed_price', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed price in ZMW (for fixed-price services)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='services.servicecategory')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'db_table': 'services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_type', models.CharField(choices=[('employee', 'Employee'), ('owner', 'Owner/Self')], default='employee', max_length=10)),
                ('owner_name', models.CharField(blank=True, help_text="Owner name (if worker_type is 'owner')", max_length=100, null=True)),
                ('date_of_work', models.DateField(help_text='Date when the work was performed')),
                ('hours_worked', models.DecimalField(blank=True, decimal_places=2, help_text='Hours worked (for hourly services)', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of services performed (for fixed-price services)')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount for this work record', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the work performed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(blank=True, help_text="Employee who performed the work (if worker_type is 'employee')", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_records', to='employees.employee')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_records', to='services.service')),
            ],
            options={
                'verbose_name': 'Work Record',
                'verbose_name_plural': 'Work Records',
                'db_table': 'work_records',
                'ordering': ['-date_of_work', '-created_at'],
            },
        ),
    ]
