# Generated by Django 5.2.4 on 2025-07-21 19:23

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name (e.g., Beverages, Electronics)', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of the category')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Product name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional product description')),
                ('selling_price', models.DecimalField(decimal_places=2, help_text='Selling price in ZMW', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, help_text='Optional cost price in ZMW', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unit_of_measure', models.CharField(choices=[('each', 'Each'), ('kg', 'Kilogram'), ('g', 'Gram'), ('liter', 'Liter'), ('ml', 'Milliliter'), ('meter', 'Meter'), ('cm', 'Centimeter'), ('pack', 'Pack'), ('box', 'Box'), ('dozen', 'Dozen'), ('pair', 'Pair'), ('set', 'Set'), ('bottle', 'Bottle'), ('can', 'Can'), ('bag', 'Bag')], default='each', help_text='Unit of measure for this product', max_length=20)),
                ('sku', models.CharField(blank=True, help_text='Optional SKU or Product Code', max_length=100, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this product is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_products', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(help_text='Product category', on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.productcategory')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_in_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), help_text='Current quantity in stock', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))])),
                ('reorder_level', models.DecimalField(blank=True, decimal_places=3, help_text='Optional reorder level for low stock alerts', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))])),
                ('last_restocked', models.DateTimeField(blank=True, help_text='Last restock date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(help_text='Product for this inventory record', on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Inventory',
                'verbose_name_plural': 'Product Inventories',
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('manual_in', 'Manual Stock In'), ('manual_out', 'Manual Stock Out'), ('opening_stock', 'Opening Stock'), ('restock', 'Restock'), ('adjustment', 'Stock Adjustment'), ('damage', 'Damaged/Expired'), ('theft', 'Theft/Loss'), ('sale', 'Sale (Auto)'), ('return', 'Return'), ('transfer', 'Transfer')], help_text='Type of stock movement', max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantity moved (positive for in, negative for out)', max_digits=12)),
                ('quantity_before', models.DecimalField(decimal_places=3, help_text='Quantity before this movement', max_digits=12)),
                ('quantity_after', models.DecimalField(decimal_places=3, help_text='Quantity after this movement', max_digits=12)),
                ('reference_number', models.CharField(blank=True, help_text='Optional reference number (invoice, receipt, etc.)', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Optional notes about this movement')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(help_text='Product for this stock movement', on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='products.product')),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'ordering': ['-created_at'],
            },
        ),
    ]
