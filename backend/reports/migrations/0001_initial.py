# Generated by Django 5.2.4 on 2025-07-23 19:18

import datetime
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('revenue_growth', 'Revenue Growth Rate'), ('profit_margin', 'Profit Margin'), ('customer_acquisition', 'Customer Acquisition'), ('average_order_value', 'Average Order Value'), ('expense_ratio', 'Expense Ratio'), ('inventory_turnover', 'Inventory Turnover'), ('service_utilization', 'Service Utilization'), ('tax_efficiency', 'Tax Efficiency')], max_length=30)),
                ('metric_date', models.DateField(default=datetime.date.today)),
                ('value', models.DecimalField(decimal_places=4, help_text='Primary metric value', max_digits=15)),
                ('percentage_value', models.DecimalField(blank=True, decimal_places=4, help_text='Percentage representation if applicable', max_digits=8, null=True)),
                ('previous_period_value', models.DecimalField(blank=True, decimal_places=4, help_text='Value from previous period for comparison', max_digits=15, null=True)),
                ('change_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage change from previous period', max_digits=8, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this metric')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metric metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Metric',
                'verbose_name_plural': 'Business Metrics',
                'db_table': 'business_metrics',
                'ordering': ['-metric_date', 'metric_type'],
                'indexes': [models.Index(fields=['user', 'metric_type'], name='business_me_user_id_bec000_idx'), models.Index(fields=['user', 'metric_date'], name='business_me_user_id_1b1794_idx'), models.Index(fields=['user', 'metric_type', 'metric_date'], name='business_me_user_id_fbfe9a_idx')],
                'unique_together': {('user', 'metric_type', 'metric_date')},
            },
        ),
        migrations.CreateModel(
            name='ReportSnapshot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('profit_loss', 'Profit & Loss'), ('cash_flow', 'Cash Flow'), ('sales_trend', 'Sales Trend'), ('expense_trend', 'Expense Trend'), ('tax_summary', 'Tax Summary'), ('business_overview', 'Business Overview')], max_length=20)),
                ('period_start', models.DateField(help_text='Start date of the reporting period')),
                ('period_end', models.DateField(help_text='End date of the reporting period')),
                ('total_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total income for the period', max_digits=15)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total expenses for the period', max_digits=15)),
                ('net_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Net profit (income - expenses)', max_digits=15)),
                ('total_sales_count', models.IntegerField(default=0, help_text='Number of sales transactions')),
                ('total_sales_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total sales amount', max_digits=15)),
                ('average_sale_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Average value per sale', max_digits=12)),
                ('total_service_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total service hours worked', max_digits=10)),
                ('total_service_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total revenue from services', max_digits=15)),
                ('taxable_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Income subject to turnover tax', max_digits=15)),
                ('turnover_tax_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Turnover tax owed for the period', max_digits=12)),
                ('additional_data', models.JSONField(blank=True, default=dict, help_text='Additional report data in JSON format')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_cached', models.BooleanField(default=True, help_text='Whether this is a cached report for performance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_snapshots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Snapshot',
                'verbose_name_plural': 'Report Snapshots',
                'db_table': 'report_snapshots',
                'ordering': ['-period_end', '-generated_at'],
                'indexes': [models.Index(fields=['user', 'report_type'], name='report_snap_user_id_81a617_idx'), models.Index(fields=['user', 'period_start', 'period_end'], name='report_snap_user_id_0bfb86_idx'), models.Index(fields=['user', 'report_type', 'period_start'], name='report_snap_user_id_29112a_idx')],
                'unique_together': {('user', 'report_type', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Template name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Template description')),
                ('report_types', models.JSONField(default=list, help_text='List of report types to include')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom Period')], default='monthly', max_length=20)),
                ('auto_generate', models.BooleanField(default=False, help_text='Whether to automatically generate this report')),
                ('include_sales', models.BooleanField(default=True)),
                ('include_services', models.BooleanField(default=True)),
                ('include_expenses', models.BooleanField(default=True)),
                ('include_assets', models.BooleanField(default=False)),
                ('include_tax_analysis', models.BooleanField(default=True)),
                ('email_recipients', models.JSONField(blank=True, default=list, help_text='Email addresses to send reports to')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'db_table': 'report_templates',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='report_temp_user_id_4e2f90_idx'), models.Index(fields=['user', 'frequency'], name='report_temp_user_id_10d930_idx')],
            },
        ),
    ]
